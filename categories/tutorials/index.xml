<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on Bitwalker</title>
    <link>http://bitwalker.org/categories/tutorials/</link>
    <description>Recent content in Tutorials on Bitwalker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2016 Paul Schoenfelder</copyright>
    <lastBuildDate>Thu, 20 Mar 2014 01:00:00 -0500</lastBuildDate>
    
	<atom:link href="http://bitwalker.org/categories/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Releases For Elixir</title>
      <link>http://bitwalker.org/posts/2014-03-11-releases-for-elixir/</link>
      <pubDate>Thu, 20 Mar 2014 01:00:00 -0500</pubDate>
      
      <guid>http://bitwalker.org/posts/2014-03-11-releases-for-elixir/</guid>
      <description>Be forewarned, this post requires a fair amount of knowledge about Elixir or Erlang. Though the topic of hot code upgrades and downgrades is probably of interest to any dev who crosses the line in to ops on a regular basis, this particular post is going to be diving headlong into the madness that is Erlang releases, and how I&amp;rsquo;ve fixed them for Elixir.
I was hanging out in #elixir-lang last week, when someone (I believe it was tylerflint) brought up the issue of performing releases with Elixir.</description>
    </item>
    
    <item>
      <title>What Is Elixir, and Why Do I Care?</title>
      <link>http://bitwalker.org/posts/2014-03-10-what-is-elixir-and-why-do-i-care/</link>
      <pubDate>Mon, 10 Mar 2014 17:52:37 -0500</pubDate>
      
      <guid>http://bitwalker.org/posts/2014-03-10-what-is-elixir-and-why-do-i-care/</guid>
      <description>This was the first thing that sprung to my mind when I first heard about Elixir. Up until that point I had written significant code in a number of languages and platforms, looking for one that felt right, if that&amp;rsquo;s even the best way to phrase the nature of my search. C#, Ruby, Python, Javascript, Scala, Clojure, C and C++ - all of them shared one theme in common: I enjoy some aspect of them, each has their pros and cons, I was able to program effectively in them, and generally the communities are great.</description>
    </item>
    
  </channel>
</rss>