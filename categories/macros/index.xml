<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Macros on Bitwalker</title>
    <link>http://bitwalker.org/categories/macros/</link>
    <description>Recent content in Macros on Bitwalker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Mar 2018 11:00:00 -0600</lastBuildDate>
    
	<atom:link href="http://bitwalker.org/categories/macros/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional Imperative Programming With Elixir</title>
      <link>http://bitwalker.org/posts/2018-03-18-functional-imperative-programming-with-elixir/</link>
      <pubDate>Sun, 18 Mar 2018 11:00:00 -0600</pubDate>
      
      <guid>http://bitwalker.org/posts/2018-03-18-functional-imperative-programming-with-elixir/</guid>
      <description>I recently found myself wishing for the simple convenience of a while loop in Elixir. I had a test where I wanted to loop and test a condition, and either break out of that loop, or time out after some period. Writing this in the form of a recursive function is relatively easy, but is not really fully general:
def while(predicate, timeout) when is_function(predicate, 0) and is_integer(timeout) do while(predicate, timeout, System.</description>
    </item>
    
  </channel>
</rss>